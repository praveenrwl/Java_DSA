// BUBBLE SORT

PUSH THE MAXIMUM TO THE LAST BY ADJACENT SWAPS


//PSEUDO CODE
0 - n-1
...
...
1

for(i = n-1; i >= 1; i--){
  for(j = 0; j <= i-1; j++){
    if(a[j] > a[j-1]){
        temp}
    }}


//CODE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

import java.util.Scanner;

class Main {
    // Bubble sort method with void return type (no return value)
    public static void bs(int arr[], int n) {
        for (int i = n - 1; i >= 0; i--) {
            for (int j = 0; j <= i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j + 1];
                    arr[j + 1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    }
    
    public static void main(String[] args) {
        System.out.println("BUBBLE SORT");
        
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the size of array: ");
        int size = sc.nextInt();
        int arr[] = new int[size];
        
        System.out.println("Enter elements: ");
        for (int i = 0; i < size; i++) {
            arr[i] = sc.nextInt();
        }
        
        System.out.println("Inserted Array >>");
        for (int i = 0; i < size; i++) {
            System.out.print(arr[i] + " ");
        }
        
        System.out.println("\nSorted Array >>");
        bs(arr, size);  // Sort the array
        
        for (int i = 0; i < size; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}


//OUTPUT >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

BUBBLE SORT
Enter the size of array: 
5
Enter elements: 
12
43
3
34
56
Inserted Array >>
12 43 3 34 56 
Sorted Array >>
3 12 34 43 56 
=== Code Execution Successful ===
