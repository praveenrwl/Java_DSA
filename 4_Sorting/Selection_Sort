/ Step 1 : Select The Minimum and Swap
// Psuedo Code >>
swap  index 0, & min index [0-n-1]
swap  index 1, & min index [1-n-1]
swap  index 2, & min index [2-n-1]
           n-2

for(int i = 0; i <= n-2; i++){
  mini = i
  for(j=0; j<=n-1; j++){
      if(arr[j] < arr[min]) 
        mini = j
  }
  Swap( arr[mini], arr[i])


// CODE >>

// SELECTION SORT

import java.util.*;

class SelectionSort {
    public static void selSort(int arr[], int n){
        for(int i = 0; i < n-2; i++){
            int min = i;
            for(int j = i; j <= n-1; j++){
                if(arr[j] < arr[min]){
                    min = j;
                }
            }
            int temp = arr[min];
            arr[min] = arr[i];
            arr[i] = temp;
        }
    }
    
    public static void main(String[] args) {
        System.out.println("Selection Sorting >>");
        Scanner sc = new Scanner(System.in);
        System.out.print("Input Size >>");
        int n = sc.nextInt();
        int arr[] = new int[n];
        System.out.println("Input Array >>");
        for(int i = 0; i < n; i++){
            arr[i] = sc.nextInt();
        }
        
        System.out.println("Inserted Array >>");
        for(int i = 0; i < n; i++){
            System.out.print(arr[i]+" ");
        }
        System.out.println();
        
        System.out.println("Sorted Array >>");
        selSort(arr, n);
        for(int i = 0; i < n; i++){
            System.out.print(arr[i]+" ");
        }
        
    }
}

  
// OUTPUT >>

Selection Sorting >>
Input Size >>5
Input Array >>
13
46
52
20
9
Inserted Array >>
13 46 52 20 9 
Sorted Array >>
9 13 20 52 46 
=== Code Execution Successful ===
