// Merge Sort 

Divide and Merge 

// CODE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
import java.util.Scanner;

class Main {
    public static void conquer(int arr[], int si, int mid, int ei) {
        int merged[] = new int[ei - si + 1];

        int i1 = si;
        int i2 = mid + 1;
        int x = 0;

        while (i1 <= mid && i2 <= ei) {
            if (arr[i1] <= arr[i2]) {
                merged[x++] = arr[i1++];
            } else {
                merged[x++] = arr[i2++];
            }
        }

        while (i1 <= mid) {
            merged[x++] = arr[i1++];
        }

        while (i2 <= ei) {
            merged[x++] = arr[i2++];
        }

        for (int i = 0, j = si; i < merged.length; i++, j++) { // Fixed typo: increment both `i` and `j`
            arr[j] = merged[i];
        }
    }

    public static void divide(int arr[], int si, int ei) {
        if (si >= ei) {
            return;
        }

        int mid = si + (ei - si) / 2; // Declare and initialize `mid` correctly
        divide(arr, si, mid);
        divide(arr, mid + 1, ei);
        conquer(arr, si, mid, ei);
    }

    public static void main(String[] args) {
        System.out.println("Merge Sort: ");
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter size: ");
        int size = sc.nextInt();
        int arr[] = new int[size];
        System.out.println("Enter elements: ");
        for (int i = 0; i < size; i++) {
            arr[i] = sc.nextInt();
        }

        divide(arr, 0, size - 1); // Corrected `n-1` to `size-1`

        // Print
        System.out.println("Sorted array:");
        for (int i = 0; i < size; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();

        sc.close(); // Close the scanner to avoid resource leaks
    }
}



// OUTPUT >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Merge Sort: 
Enter size: 
5
Enter elements: 
4 1 3 9 7
Sorted array:
1 3 4 7 9
