// Arrays : Primitive DataTypes
// Implication - Performance

import java.util.*;

class Array {
    public static void swap(int[] one, int i, int j){
        int temp = one[i];
        one[i] = one[j];
        one[j] = temp;
    }
    
    public static void main(String[] args) {
        // Decalaration of array >>>>>>>>>>>>>
        // int[] one;
        // one = new int[5];
        
        // one[0] = 23;
        // one[1] = 34;
        // one[3] = 43;
        
        // int two[] = one;
        // two[1] = 590;
        
        // swap(one, 0, 2);    //Shallow Copy
        
        // for(int i = 0; i < one.length; i++){
        //     System.out.println(one[i]);
        // }
        
        // Span of array >>>>>>>>>>>>>
        Scanner sc = new Scanner(System.in);
        int size = sc.nextInt();
        int arr[] = new int[size];
        
        for(int i = 0; i < arr.length; i++){
            arr[i] = sc.nextInt();
        }
        int max = arr[0];
        int min = arr[0];
        
        for(int i = 1; i < arr.length; i++){
            if(arr[i] > max){
                max = arr[i];
            }
            if(arr[i] < min){
                min = arr[i];
            }
        }
        int span = max - min;
        System.out.println(span);
        
    }
}
